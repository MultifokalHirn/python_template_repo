name: Deploy vocs site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node_modules-${{ runner.os }}-
        id: cache
      - name: Setup npm environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --no-save --include=dev

      - name: Build docs site and put it in _site/
        run: npm run docs:build
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
